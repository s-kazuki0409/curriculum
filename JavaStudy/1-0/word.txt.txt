・IT
インターネットなどの通信とコンピューターを駆使する情報技術

・ICT
インフォメーション・アンド・コミュニケーション・テクノロジー
情報通信技術のこと

・LoT
internet of things の略　モノがインターネット経由で通信すること

・OS
ハードウェアとソフトウェアを仲介するもの

・Windows
Microsoftが開発したOS　トップシェア　ユーザーが多い

・Mac OS
apple社が開発したOS　窓に次ぐシェア

・Linux
　無料インストールできる　独自にカスタマイズできる　GUIはいまいち

・UNIX
昔流行った。Linuxの親的存在

・マークアップ/フロントエンド
タグで囲むことで構造を表現する言語

・HTML
ホームページを作るときに使う言語　

・CSS
ホームページの見た目を整える言語

・JavaScript
簡易的な言語　ホームページに動きをつける

・jQuery
JavaScriptでできることをより簡単な記法で実現できるように設計されたJavascriptライブラリ

・Java SE
Java Platform, Standard Editionの略称。 Java で使用される API をまとめたものです。

・サーバーサイド
サーバ上で動くものをサーバサイドという言い方をする。サーバサイドエンジニアというと、サーバサイド（側）で動くシステムを作るエンジニアだ。

・.NET（C#, VB）
Windowsとの相性の良さから、Windows系のシステム開発で用いられることが多くなっています。特に、業務の効率化や自動化をするシステム開発においては.NET Frameworkが使用されるケースも少なくありません。

・java
Javaは動く環境を気にしない言語。Javaは代表的なサーバサイドプログラミング言語だ。サーバサイドというか、何にでも使えるのがJavaの特徴だが、サーバサイドの匂いが強い

・java EE
関数またはツールの集まり（ちょい高級）Java EEには二種類のSDKがあります。そもそもSDKって何？と思われた方もいるかもしれません。SDKとは、Software Development Kitの略でソフトウェア開発キットです。
要するに、Java EEにに含まれている開発環境、サンプルコード、資料、などなど開発に必要なものをひっくるめてSDKと呼んでいます。

・Perl
Practical Extraction and Report Language の略。動作を確認しながら作業が出来る。インタープリタ型。、掲示板など、表示内容がどんどん変化していくページが作れます。

・PHP
HTMLで記述したファイルの中に埋め込んで使える。PHPの処理はWebサーバー側で行われる。動的にWebページを生成する。

・Ruby
まつもとゆきひろ氏により開発されたRubyはフリーソフトウェアです。 無料とか自由に使えるといったことだけでなく、コピー、変更、および再配布の自由を約束しています。

・サーバーソフト
一般的には通信ネットワークを通じて別のコンピュータで稼働しているクライアントソフトウェアに機能やデータを提供するもののことを指すが、通信やネットワークの存在を前提とせず、単に別のソフトウェアに何かを提供する機能を持ったものをサーバソフトウェアという場合もある。

・Apache(アパッチ)
Webサーバーソフトウェア。オープンソースソフトウェア(OSS)で、無償で誰でも利用可能。CMSを動かすためのPHPやデータベースと連携がしやすい

・ngin
HTTPおよび、HTTPSでのアクセスに使われる軽量サーバーのこと。アクセス制御.URI Rewrite.gzip圧縮.リバースプロキシ.ロードバランシング.HTTP/2ゲートウェイなどの機能がある。

・IIS
「無料」で利用できるWebサーバーソフト。PCと同じWindows OSで動き、操作は慣れている。視覚的に操作可能(コマンドを覚える必要がない)日本語の公式マニュアルが多い

・ SQL（シークェル。またはシーケル）
データベース言語。SQLはデータベース言語の中で、最も普及している言語の一つです。DBMS（データベース管理システム）上でデータやデータベースを制御するための言語であり、ユーザーやシステムからの命令を受けてRDB（リレーショナルデータベース）にクエリ（問い合わせ）を行い、結果を返します。
返ってきた結果はモニターなどに表示されます。

・DB2
米IBM社のリレーショナルデータベース管理システム。幅広いプラットフォームに対応している。

・MySQL
世界中の多くの企業が使用しているデータベース管理システムです。大容量のデータも高速に動作を行えるため、レンタルサーバーや検索エンジンでも使用されている。	
・Maria DB
日本語では「リレーショナルデータベース管理システム」や「関係データベース管理システム」といった呼び方をします。MySQLから派生した
・Oracle DB
高い堅牢性を持つ、行レベルでの排他制御「行レベル・ロック」を行うことで、同時に多くのユーザーが利用できる検索時点のデータを読み取ることが保証される「読み取り一貫性」パフォーマンスの向上、機能拡張などビジネスニーズを満たす機能を持つ

・PostgreSQL
オープンソースのリレーショナルデータベース管理システム（RDBMS）です。Linux、macOSといったUNIX系OSはもちろんのこと、Windowsにも対応しています。

・SQLite
簡易的な（ライトな）データベースであり、サーバーとしてではなくアプリケーションに組み込むことで利用します。データベースは大掛かりなシステムで利用される、という印象が強いものですが、SQLiteは簡易的に利用することが可能です。

・SQL Server
データベース管理システム。、Windows OSとの相性がよく、Windows Serverで利用されることが多いデータベースとなっています。基本的には有償となりますが、無償で利用可能なエディションも用意されています。

・CRUD
システムに必要な４つの主要機能である「Create 生成」「Read 読み取り」「Update 更新」「Delege 削除」の頭文字を並べた用語。

・トランザクション
互いに関わりがある複数の処理を一度にまとめておこないい一つの処理とすることを表す。トランザクションでは複数の処理をまとめて行う。一連のすべての処理が問題なく行われた場合にだけ成功「分割不可な一連の処理」

・コミット
「約束」「責任」「真剣な関わり」
・ロールバック
やりかけの処理を取り消すこと。データベースのトランザクション処理において、処理した結果を取り消して、やらなかったことにする
・排他制御
複数の主体が同じ資源を同時に利用すると競合状態が生じる場合に、ある主体が資源を利用している間、別の主体による資源の利用を制限もしくは禁止する仕組みのこと。

・楽観ロック
排他制御の代表的な方式のひとつ、そもそも「同時アクセスはあまり起きない」という楽観的な考え方の排他制御。データ自体をロックせず、更新対象のデータが更新前と同じであるかを確認してから更新することで、データの整合性を保つ排他制御。

・悲観制御
同じデータを他者が頻繁に更新するという悲観的な考え方の排他制御。更新対象データを取得時にロックして他者が制御できないようにする方式。

・実行計画
実際に実行されるプログラムの概要を提示したもの。

・チューニング
いい感じに調整する

・パフォーマンス
コンピューターなどの機器やソフトウェア、システムなどの処理性能や実行速度、通信回線、ネットワークな喉伝達速度、容量など。

・スロークエリ
処理速度が遅いSQL（２秒以上かかっていたら大体おそいと考える）

・クエリログ
クライアントからのMySQL Serverへの接続・接続解除の情報、およびクライアントから実行されたすべての SQLクエリを出力してくれるログ。SQL実効エラーが発生した時に、どのようなSQLが実行されたのかを正確に把握するのに役立つ。

・IDE
アプリケーション構築のためのソフトウェア、複数の一般的な開発者用ツールを一つのグラフィカル・ユーザー・インターフェース（GUI）で使えるようにしたもの。

・Eclipse
javsで開発するならまず使うであろうIDE

・NetBeans
日本語版がある、GUIによるプログラム開発が手軽にできる

・SpringToolSuite
Eclipseをベースにして、Spring開発に必要なものを組み込んだパッケージ。

・DBツール
DB管理タスクに使用できるツール、ユーティリティ及び補助ツールの総称

・PM
プロジェクトマネージャー。プロジェクトの運営品質納期等に責任を持ち、プロジェクトを円滑に推進させる役目を果たす「プロジェクト管理者」

・PL
プロジェクトリーダー。システムの構築・導入プロジェクトにおいて、プロジェクトチームを管理・統括する業務。

・PG
プログラマ。SEが作成した設計書に沿ってプログラミングを行う仕事のこと。システム開発における製造過程を担当する。

・SE
システムエンジニア。顧客の要求から使用を決定し、大まかな設計をすつまでの情報システム開発における上流工程を担当する。その際の予算、人員、進捗管理などのマネジメント業務も含む。

・デザイナー
クライアントや依頼者の求めに応じたデザインを考案する人。

・エンジニア
工学（エンジニアリング）に関する専門的な知識やスキルを持った人材。

・フロントサイド・エンジニア
Webアプリケーションなどでユーザーが画面越しに触れる部分、フロントエンドの設計や構築を行う。（HTML.CSS.JavaScript）

・サーバーサイド・エンジニア
サーバー側で動作するプログラムの開発やデータ処理などを行うエンジニアのこと。バックサイドでのデータ処理環境の構築、新しいソフトウェアやバージョンアップの伴う環境の調整・構築を行う。

・バックエンドエンジニア
Web領域のバックエンドを担当するエンジニア。サーバーサイドエンジニアの中のひとくくり

・UI
コンピュータを扱うときに利用者が情報を受け取ったり入力したりするための仕組み。

・CUI
キーボードを使って操作するUI

・GUI
マウスカーソルを使って操作するUI

・ファイル
データやプログラムの基本単位、ハードディスクなどの記憶装置に記録された人まとまりの情報

・拡張子
ファイルの種類を表す。

・ディレクトリ
GUIでフォルダと呼ばれるもの、CUIでの呼び方。厳密には同じものではなく、デュレクトリは「ハードディスクなどの記録メディア上のファイルの保管場所」フォルダは「オブジェクトの入れ物」

・ルート・ディレクトリ
階層型ファイル構造における最上階層のディレクトリのことルート（根底）ハードディスクなどがこれに当たる。

・カレント・ディレクトリ
今いるディレクトリのこと、現在地

・パス
ファイルやディレクトリの場所、住所

・絶対パス
フルパスともいう、階層構造の頂点からの位置関係を記述する方式。

・相対パス
編集しているファイルを置いている場所を起点にして対象ファイルの位置を記述する方式

・ネットワーク

・LUN
RAIDシステムやSANなどで一台のストレージ機器の中に複数の装置が存在する場合に、これを識別する番号のこと。

・WAN（広域通信網）
地理的に離れた地点間を結ぶ通信ネットワーク・建物内や敷地内を結ぶLANと対比される用語。

・クライアント
他のコンピューターやソフトウェアから機能や情報の提供を受けるコンピューターやソフトウェアのこと。（サービスを使う側のコンピュータ、あるいはお客様）

・サーバー
利用者の要求に対して、それに応答したデータを提供するコンピュータやプログラムのこと。

・HTTP
HTTPとは、WebサーバーとWebクライアントの間でデータの送受信を行うために用意られるプロトコル（通信規約）ホームページのファイルを受け渡しするときに使う。

・FTP
インターネットなどでファイルのダウンロードのために用意られるプロトコルのこと。ファイル転送プロトコル。

・HTTPS
SLLを用いた暗号化の機能が実装されたタイプのHTTP

・SLL
HTTPやFTPなどのプロトコルで行われる通信を暗号化して送受信するためのプロトコル。

・ポート番号
TCP/IP通信において、コンピュータが通信に使用するプログラムを識別するための番号。

・HTTP.FTP.SSHの各ポート番号
HTTP80. FTP20.21. SSH22

・ファイアウォール
外部のネットワークからインターネットを通して侵入してくる不正なアクセスから守るための防火扉。

・TCP
伝送制御プロトコル、品質重視、送ったデータが相手に届いたか、その都度確認しながら通信する。信頼性は高いが転送速度が低い。

・IPアドレス
インターネット上に接続された機器が持つナンバーのこと。データをやり取りする際、ネットワーク上で通信相手を間違わないようにするために使われる。インターネットでの住所のようなもの。

・グローバルIPアドレス
インターネットで相手と通信するためにもつ他のアドレスと重複しない一意のIPアドレスのこと。

・プライベートIPアドレス
組織内のネットワーク（プライベートネットワーク）でのみ使えるIPアドレスオフィス内のネットワークや家庭用のネットワークなどでは、通常プライベートIPアドレスが使われている。

・ドメイン
インターネット上に存在するコンピュータやネットワークを識別するための名前。簡単にいうと住所。www（ホスト名）.◯◯◯（ドメイン名）。

・DNS
インターネット上でドメイン名を管理・運用するために開発されたシステム。

・VPN
インターネット上に仮想の僭称線を設定し、特定の人のみが利用できる専用ネットワーク。接続したい拠点に専用のルーターを設置し、相互通信を行うことができる。トンネリング、暗号化、承認を設定することができる。トンネリングはデータ送信者と受信者の間に仮想的なトンネル（トンネリング）を作り通信を行う。暗号化はやり取りするデータを盗聴、改竄等ができないように鍵をかけることができる。承認は信者と受信者同士が互いに正しい相手だと確かめるもの。

・ブリッジ
二つのネットワークをブリッジ装置により接続し、一つの大きなネットワークにすること。また転じて、二つのネットワークに接続された通信機器やコンピュータを介して、両ネットワークを一体化すること。

・プロキシサーバー
プロキシとは代理という意味であるが、内部ネットワークからインターネット接続を行う際、高速なアクセスや安全な通信などを確保するための中継サーバー。内部と外部のネットワークの中継をする役割を持つサーバーで、情報の受け渡しを行う。

・SMTP
インターネットやイントラネットで電子メールを送信転送する為に用いられるプロトコルで、現在最も普及しているものの名称である。送信の手順

・POP
受信転送する為に用いられるプロトコル。受信の手順


・IMAP
概ねPOPと同じものだが、違いが「メールをサーバーに残すか残さないか」である。POPではメールがサーバーからなくなってしまうが、IMAPでは残る。

・セッション
接続を確立してから切断するまでの一連の通信のこと。HTTPのサイトでは、セッションにIDを振ることで同一のセッションを管理することができる。あるいは一連のインタラクティブな操作を指す場合もある。（例：ログインからログアウトまで）

・クッキー
履歴のこと、ユーザーとサーバーの間で特定の情報をやり取りするファイル。閲覧中のwebサイトとユーザーの間でアクセス情報をやり取りする、双方向通信をイメージ。
cookieはwebサイトにアクセスした際ユーザー情報をブラウザで一時的に保存し、同じユーザーが再アクセスしたときにサーバー側で同一ユーザーであることを識別する。

・キャッシュ
データを一時的に歩座オンすることで、データの処理速度を速める考え方、仕組みのこと。インターネットブラウザーで一度読み込んだ画像データなどをキャッシュファイルとしてメモリに一時保存することで表示を早くする。

・インデックス
見出しのこと、検索エンジンに記録されているホームページの情報、検索を早くするための仕組み、配列の添字のこと。。。などなど

・フロー
ソフトウェアやプログラミングの分野で、コンピュータープログラムを構成する命令や手続き、処理の流れなどをフローという。または回線を通じて伝送される信号やデータの流れ。情報システム上での機器間やソフトウェア間のデータの移動や伝達のこともデータフローということがある。

・タスク
コンピューターが処理するプログラムの処理単位のこと。複数のアプリケーションを起動しながら作業することができ、データの入力や集計、電素メールの送受信など指示した処理が終了するのを待たず別の処理を行えるため作業効率が向上する。

・Git
オープンソースの分散バージョン管理システムの一つ。複数の開発者が共同で一つのソフトウェアを開発する際などに、ソーズコードやドキュメントなどの編集履歴を統計的に管理するのに用いられる。

・SVN
オープンソースのバージョン管理システム、複数の開発が共同で一つのソフトウェアを開発する際などに、ソースコード宿キィメントを管理するのに用いられる。CVSを参考に開発され、基本的なコマンドなどはCVSと共通になっている。

・デグレ
デグレードこと、新しいバージョンのソフトウェアの品質が、以前より悪くなること。以前修正した不具合やバグが再発・復活すること。ファイルなどを古い内容で上書きしてしまい、更新内容が失われることを指す場合もある。

・マージツール
マージとは、融合するなどの意味を持つ英単語。複数のファイルやデータ、プログラムなどを決められたルールに従って一つに統合することをマージということが多い。
